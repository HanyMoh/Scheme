c
n
self
n
the_next_task
n
self
n
c
params[:project_id]
c
Project.find(161).tasks
params[:project_id]
:project_id
c
n
c
in_front_of_task.previous_task
inf
move_task
new_previous
c
move_task.id
new_previous.next_task_id
n
new_previous.next_task_id
c
new_previous.next_task_id
move_task.id
n
in_front_of_task.previous_task
in_front_of_task.previous_task_id
c
in_front_of_task
move_task
c
in_front_of_task
move_task
c
in_front_of_task
move_task
c
in_front_of_task
move_task
c
in_front_of_task
n
c
Task.includes(:project).find(params[:task_id])
c
params
params[:id]
Task.includes(:project).find(params[:id])
c
n
params
c
quit
move_task
n
move_task
n
move_task
c
n
in_front_of_task.previous_task_id
in_front_of_task.id
in_front_of_task
n
next_task
previous_task
n
previous_task
n
next_task
n
next_task
n
next_task
n
move_task
c
params
c
'c
c
n
c
task.project_id
task
n
params
c
params
c
current_user.team.name
current_user.team
current_user
c
params
c
Task.where(project_id: params[:project_id])
params
c
params
c
params
c
@users
n
c
@users
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
n
c
n
@user
params
n
c
current_user
c
current_user
c
quit
c
task.creator
task
c
n
@task.update(task_params)
@task
n
@task.update(task_params)
task_params
Task.find(params[:id])
params
c
task.creator_id == current_user.id
task
n
current_user.id == Task.find(params[:id]).creator_id
Task.find(params[:id])
current_user
c
n
task
n
task
n
task
c
params
c
params
